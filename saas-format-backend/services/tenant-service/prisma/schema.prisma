generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tenant Management
model Tenant {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  domain      String?  @unique
  plan        String   @default("free")
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  settings    TenantSettings?
  databases   TenantDatabase[]
}

model TenantSettings {
  id              String   @id @default(uuid())
  tenantId        String   @unique
  tenant          Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  logoUrl         String?
  primaryColor    String?
  allowSignup     Boolean  @default(true)
  maxUsers        Int      @default(5)
  maxProjects     Int      @default(10)
  maxStorage      Int      @default(1024) // in MB
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// For database-per-tenant approach
model TenantDatabase {
  id              String   @id @default(uuid())
  tenantId        String
  tenant          Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  connectionString String
  type            String   @default("postgres") // postgres, mysql, etc.
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Tenant Audit Logs
model TenantAuditLog {
  id              String   @id @default(uuid())
  tenantId        String
  action          String   // created, updated, deleted, etc.
  performedBy     String?  // User ID who performed the action
  details         String?
  createdAt       DateTime @default(now())
}
