version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - TENANT_SERVICE_URL=http://tenant-service:3002
      - USER_SERVICE_URL=http://user-service:3003
      - PROJECT_SERVICE_URL=http://project-service:3004
      - BILLING_SERVICE_URL=http://billing-service:3005
      - FEATURE_SERVICE_URL=http://feature-service:3006
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - auth-service
      - tenant-service
      - user-service
      - project-service
      - billing-service
      - feature-service
    networks:
      - saas-network

  # Authentication Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/saas_auth
      - JWT_SECRET=your-jwt-secret-key
      - JWT_EXPIRATION=1d
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - saas-network

  # Tenant Service
  tenant-service:
    build:
      context: ./services/tenant-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/saas_tenant
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - saas-network

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/saas_user
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - saas-network

  # Project Service
  project-service:
    build:
      context: ./services/project-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/saas_project
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - saas-network

  # Billing Service
  billing-service:
    build:
      context: ./services/billing-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/saas_billing
      - STRIPE_SECRET_KEY=your-stripe-secret-key
      - STRIPE_WEBHOOK_SECRET=your-stripe-webhook-secret
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - saas-network

  # Feature Flag Service
  feature-service:
    build:
      context: ./services/feature-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3006
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/saas_feature
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - saas-network

  # PostgreSQL
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=saas_auth,saas_tenant,saas_user,saas_project,saas_billing,saas_feature
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    ports:
      - "5432:5432"
    networks:
      - saas-network

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - saas-network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - saas-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - saas-network

networks:
  saas-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
