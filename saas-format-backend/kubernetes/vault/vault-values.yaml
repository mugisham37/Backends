# Vault Helm chart values

# Global settings
global:
  enabled: true
  tlsDisable: false

# Injector settings
injector:
  enabled: true
  replicas: 2
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Server settings
server:
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_api_addr = "http://vault-0.vault-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-1.vault-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-2.vault-internal:8200"
          }
        }
        service_registration "kubernetes" {}
        seal "awskms" {
          region     = "${AWS_REGION}"
          kms_key_id = "${KMS_KEY_ID}"
        }
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  dataStorage:
    enabled: true
    size: "10Gi"
    storageClass: "gp2"
    accessMode: "ReadWriteOnce"
  
  auditStorage:
    enabled: true
    size: "10Gi"
    storageClass: "gp2"
    accessMode: "ReadWriteOnce"
  
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: "${VAULT_IAM_ROLE_ARN}"
  
  extraEnvironmentVars:
    VAULT_CACERT: /vault/userconfig/vault-server-tls/ca.crt
  
  extraVolumes:
    - type: secret
      name: vault-server-tls
  
  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: vault
              app.kubernetes.io/instance: vault
              component: server
          topologyKey: kubernetes.io/hostname

# UI settings
ui:
  enabled: true
  serviceType: "ClusterIP"
  serviceNodePort: null
  externalPort: 8200

# Service settings
service:
  enabled: true

# Ingress settings
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: vault.${DOMAIN_NAME}
      paths:
        - /
  tls:
    - secretName: vault-tls
      hosts:
        - vault.${DOMAIN_NAME}
