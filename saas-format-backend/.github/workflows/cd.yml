name: CD

on:
  push:
    branches: [main]
    tags: ['v*']

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha,format=short
            
      # Build and push API Gateway
      - name: Build and push API Gateway
        uses: docker/build-push-action@v4
        with:
          context: ./services/api-gateway
          push: true
          tags: ${{ steps.meta.outputs.tags }}-api-gateway
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-api-gateway
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-api-gateway,mode=max
          
      # Build and push Auth Service
      - name: Build and push Auth Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/auth-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}-auth-service
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-auth-service
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-auth-service,mode=max
          
      # Build and push Tenant Service
      - name: Build and push Tenant Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/tenant-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}-tenant-service
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-tenant-service
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-tenant-service,mode=max
          
      # Build and push User Service
      - name: Build and push User Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/user-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}-user-service
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-user-service
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-user-service,mode=max
          
      # Build and push Project Service
      - name: Build and push Project Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/project-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}-project-service
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-project-service
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-project-service,mode=max
          
      # Build and push Billing Service
      - name: Build and push Billing Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/billing-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}-billing-service
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-billing-service
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-billing-service,mode=max
          
      # Build and push Feature Service
      - name: Build and push Feature Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/feature-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}-feature-service
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-feature-service
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-feature-service,mode=max
          
      # Build and push Analytics Service
      - name: Build and push Analytics Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/analytics-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}-analytics-service
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-analytics-service
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-analytics-service,mode=max
          
      # Build and push Client
      - name: Build and push Client
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags: ${{ steps.meta.outputs.tags }}-client
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-client
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:buildcache-client,mode=max
          
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
        
      - name: Deploy to Kubernetes
        run: |
          # Set image tag based on GitHub ref
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          else
            TAG=${GITHUB_SHA::7}
          fi
          
          # Update Kubernetes manifests with new image tags
          sed -i "s|image:.*api-gateway.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-api-gateway|g" kubernetes/api-gateway-deployment.yaml
          sed -i "s|image:.*auth-service.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-auth-service|g" kubernetes/auth-service-deployment.yaml
          sed -i "s|image:.*tenant-service.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-tenant-service|g" kubernetes/tenant-service-deployment.yaml
          sed -i "s|image:.*user-service.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-user-service|g" kubernetes/user-service-deployment.yaml
          sed -i "s|image:.*project-service.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-project-service|g" kubernetes/project-service-deployment.yaml
          sed -i "s|image:.*billing-service.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-billing-service|g" kubernetes/billing-service-deployment.yaml
          sed -i "s|image:.*feature-service.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-feature-service|g" kubernetes/feature-service-deployment.yaml
          sed -i "s|image:.*analytics-service.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-analytics-service|g" kubernetes/analytics-service-deployment.yaml
          sed -i "s|image:.*client.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/saas-platform:$TAG-client|g" kubernetes/client-deployment.yaml
          
          # Apply Kubernetes manifests
          kubectl apply -f kubernetes/
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/api-gateway
          kubectl rollout status deployment/auth-service
          kubectl rollout status deployment/tenant-service
          kubectl rollout status deployment/user-service
          kubectl rollout status deployment/project-service
          kubectl rollout status deployment/billing-service
          kubectl rollout status deployment/feature-service
          kubectl rollout status deployment/analytics-service
          kubectl rollout status deployment/client
