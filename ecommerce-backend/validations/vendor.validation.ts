import Joi from "joi"

export const vendorValidation = {
  createVendor: Joi.object({
    businessName: Joi.string().required().trim().min(3).max(100),
    email: Joi.string().required().email().trim().lowercase(),
    password: Joi.string().required().min(8),
    phone: Joi.string().required().trim(),
    description: Joi.string().required().trim().min(10).max(2000),
    logo: Joi.string().uri(),
    bannerImage: Joi.string().uri(),
    website: Joi.string().uri(),
    socialMedia: Joi.object({
      facebook: Joi.string().uri(),
      twitter: Joi.string().uri(),
      instagram: Joi.string().uri(),
      pinterest: Joi.string().uri(),
      youtube: Joi.string().uri(),
    }),
    addresses: Joi.array().items(
      Joi.object({
        street: Joi.string().required().trim(),
        city: Joi.string().required().trim(),
        state: Joi.string().required().trim(),
        postalCode: Joi.string().required().trim(),
        country: Joi.string().required().trim(),
        isDefault: Joi.boolean().default(false),
      }),
    ),
    bankAccounts: Joi.array().items(
      Joi.object({
        accountName: Joi.string().required().trim(),
        accountNumber: Joi.string().required().trim(),
        bankName: Joi.string().required().trim(),
        routingNumber: Joi.string().required().trim(),
        swiftCode: Joi.string().trim(),
        isDefault: Joi.boolean().default(false),
      }),
    ),
    taxInformation: Joi.object({
      taxId: Joi.string().required().trim(),
      businessType: Joi.string().required().valid("sole_proprietorship", "partnership", "corporation", "llc", "other"),
      taxDocuments: Joi.array().items(Joi.string().uri()),
      vatRegistered: Joi.boolean().default(false),
      vatNumber: Joi.string().trim(),
    }),
    commissionRate: Joi.number().min(0).max(100).default(10),
    minimumPayoutAmount: Joi.number().min(0).default(100),
    payoutSchedule: Joi.string().valid("daily", "weekly", "biweekly", "monthly").default("monthly"),
    status: Joi.string().valid("pending", "approved", "rejected", "suspended").default("pending"),
    verificationDocuments: Joi.array().items(Joi.string().uri()),
    verificationNotes: Joi.string().trim(),
    returnPolicy: Joi.string().trim().max(5000),
    shippingPolicy: Joi.string().trim().max(5000),
    contactPerson: Joi.object({
      firstName: Joi.string().required().trim(),
      lastName: Joi.string().required().trim(),
      email: Joi.string().required().email().trim(),
      phone: Joi.string().required().trim(),
      position: Joi.string().required().trim(),
    }).required(),
    active: Joi.boolean().default(true),
  }),

  updateVendor: Joi.object({
    businessName: Joi.string().trim().min(3).max(100),
    email: Joi.string().email().trim().lowercase(),
    phone: Joi.string().trim(),
    description: Joi.string().trim().min(10).max(2000),
    logo: Joi.string().uri(),
    bannerImage: Joi.string().uri(),
    website: Joi.string().uri(),
    socialMedia: Joi.object({
      facebook: Joi.string().uri(),
      twitter: Joi.string().uri(),
      instagram: Joi.string().uri(),
      pinterest: Joi.string().uri(),
      youtube: Joi.string().uri(),
    }),
    addresses: Joi.array().items(
      Joi.object({
        street: Joi.string().required().trim(),
        city: Joi.string().required().trim(),
        state: Joi.string().required().trim(),
        postalCode: Joi.string().required().trim(),
        country: Joi.string().required().trim(),
        isDefault: Joi.boolean().default(false),
      }),
    ),
    bankAccounts: Joi.array().items(
      Joi.object({
        accountName: Joi.string().required().trim(),
        accountNumber: Joi.string().required().trim(),
        bankName: Joi.string().required().trim(),
        routingNumber: Joi.string().required().trim(),
        swiftCode: Joi.string().trim(),
        isDefault: Joi.boolean().default(false),
      }),
    ),
    taxInformation: Joi.object({
      taxId: Joi.string().trim(),
      businessType: Joi.string().valid("sole_proprietorship", "partnership", "corporation", "llc", "other"),
      taxDocuments: Joi.array().items(Joi.string().uri()),
      vatRegistered: Joi.boolean(),
      vatNumber: Joi.string().trim(),
    }),
    commissionRate: Joi.number().min(0).max(100),
    minimumPayoutAmount: Joi.number().min(0),
    payoutSchedule: Joi.string().valid("daily", "weekly", "biweekly", "monthly"),
    verificationDocuments: Joi.array().items(Joi.string().uri()),
    returnPolicy: Joi.string().trim().max(5000),
    shippingPolicy: Joi.string().trim().max(5000),
    contactPerson: Joi.object({
      firstName: Joi.string().trim(),
      lastName: Joi.string().trim(),
      email: Joi.string().email().trim(),
      phone: Joi.string().trim(),
      position: Joi.string().trim(),
    }),
    active: Joi.boolean(),
  }),

  updateVendorStatus: Joi.object({
    status: Joi.string().required().valid("pending", "approved", "rejected", "suspended"),
    notes: Joi.string().trim(),
  }),

  calculatePayout: Joi.object({
    startDate: Joi.date().iso().required(),
    endDate: Joi.date().iso().required().greater(Joi.ref("startDate")),
  }),

  createPayout: Joi.object({
    vendor: Joi.string().required(),
    amount: Joi.number().required().min(0),
    fee: Joi.number().required().min(0),
    netAmount: Joi.number().required().min(0),
    currency: Joi.string().default("USD").uppercase().length(3),
    status: Joi.string().valid("pending", "processing", "completed", "failed", "cancelled").default("pending"),
    paymentMethod: Joi.string().required().valid("bank_transfer", "paypal", "stripe", "other"),
    paymentDetails: Joi.object({
      accountName: Joi.string(),
      accountNumber: Joi.string(),
      bankName: Joi.string(),
      routingNumber: Joi.string(),
      swiftCode: Joi.string(),
      paypalEmail: Joi.string().email(),
      stripeAccountId: Joi.string(),
      other: Joi.object(),
    }),
    reference: Joi.string().required(),
    description: Joi.string().trim(),
    periodStart: Joi.date().iso().required(),
    periodEnd: Joi.date().iso().required().greater(Joi.ref("periodStart")),
    orders: Joi.array().items(Joi.string()),
  }),

  updatePayoutStatus: Joi.object({
    status: Joi.string().required().valid("pending", "processing", "completed", "failed", "cancelled"),
    transactionId: Joi.string().trim(),
    notes: Joi.string().trim(),
  }),
}
